---
title: "Exploratory Data Analysis with Snowflake"
format: html
---

This example shows easily accessing data in Snowflake with Workbench Managed Credentials and dynamically generating SQL queries from R code.

Posit has created the [tidyverse](https://www.tidyverse.org/) which is a collection of some of the most widely used R packages for data science. The [dbplyr](https://dbplyr.tidyverse.org/) package is especially helpful for working with Snowflake as it can take standard [dplyr](https://dplyr.tidyverse.org/) R code and dynamically convert to SQL pushed to Snowflake.

# Setup

## Load Packages

```{r}
#| echo: false
#| message: false

library(odbc)
library(DBI)
library(dbplyr)
library(tidyverse)
library(scales)
```

## Connect to Snowflake

```{r}
con <- dbConnect(
  odbc::snowflake(),
  warehouse = "DEFAULT_WH"
)
con
```

## Create a query to format the data

Preview the query

```{r}
base_query <- tbl(con, in_catalog("LENDING_CLUB", "PUBLIC", "LOAN_DATA")) |>
      mutate(REGION = case_when(stringr::str_sub(ZIP_CODE, 1, 1) %in% c("8","9") ~ "West",
                                stringr::str_sub(ZIP_CODE, 1, 1) %in% c("6","5","4") ~ "Midwest",
                                stringr::str_sub(ZIP_CODE, 1, 1) %in% c("7","3","2") ~ "South",
                                stringr::str_sub(ZIP_CODE, 1, 1) %in% c("1","0") ~ "East",
                                TRUE ~ as.character(NA))) |>
      select(REGION, GRADE, SUB_GRADE, LOAN_AMNT, FUNDED_AMNT,
             TERM, INT_RATE, ZIP_CODE, OUT_PRNCP) |>
      mutate(OFFICE_NO = stringr::str_sub(ZIP_CODE, 1, 3)) |>
      filter(!is.na(REGION))
base_query
```

## View the SQL generated

```{r}
show_query(base_query)
```

## Compute basic summary statistics

Build on the existing query and collect the results

```{r}
summary_stats <- base_query |>
  group_by(REGION, GRADE) |>
  summarise(OUT_PRNCP = sum(as.numeric(OUT_PRNCP), na.rm = TRUE)) |>
  collect()

summary_stats
```

## Graph the results


Graph showing out_prncp per grade by region using the summary_stats data


```{r}
summary_stats |>
  ggplot(aes(x = GRADE, y = OUT_PRNCP, fill = GRADE)) +
  geom_col() +
  facet_wrap(~REGION) +
  scale_y_continuous(labels = scales::label_number(scale = 1e-6, suffix = "M")) +
  labs(y = "Outstanding Principal (Millions)", x = "Loan Grade") +
  theme_minimal() +
  theme(legend.position = "none")

```
